<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spir.ggcycling.dao.NewsMapper">
  <resultMap id="BaseResultMap" type="com.spir.ggcycling.bean.News">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <association property="user" javaType="user" resultMap="queryUser"/>
  </resultMap>
  <resultMap id="queryUser" type="user">
    <result column="uid" property="id"/>
    <result column="uname" property="name"/>
    <result column="head_url" property="headUrl"/>
  </resultMap>

    <resultMap id="UserIdAndUserName" type="user">
        <result column="uid" property="id"/>
        <result column="uname" property="name"/>
        <result column="uhead_url" property="headUrl"/>
    </resultMap>
  <sql id="Base_Column_List">
    n.id, n.title, n.link, n.image, n.like_count, n.comment_count, n.created_date, n.user_id
  </sql>
  <sql id="User_Column_List">
    u.id as uid ,u.name as uname,u.head_url
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from news_gg
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from news_gg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.spir.ggcycling.bean.News">
    insert into news_gg (id, title, link, 
      image, like_count, comment_count, 
      created_date, user_id)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{likeCount,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.spir.ggcycling.bean.News">
    insert into news_gg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spir.ggcycling.bean.News">
    update news_gg
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spir.ggcycling.bean.News">
    update news_gg
    set title = #{title,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      like_count = #{likeCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>



  <select id="queryNews" resultMap="BaseResultMap">
select
<include refid="Base_Column_List"/>,<include refid="User_Column_List"/>
    from news_gg n LEFT JOIN user_gg u on n.user_id = u.id

  </select>


  <!--查找单个News-->
  <select id="querySingleNews" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>,<include refid="User_Column_List"/>
    from news_gg n LEFT JOIN user_gg u on n.user_id = u.id
    <where>
      n.id = #{newsId}
    </where>
  </select>

<!--new、user多表查询：通过新闻的Id查找分享该新闻的用户-->
    <select id="queryUserByNewsId" resultMap="UserIdAndUserName">
        select
        u.id as uid,
        u.name as uname,
        u.head_url as uhead_url,
        n.id as nid
        from
        news_gg n left join user_gg u
        on n.user_id = u.id
        <where>
            n.id = #{newsId}
        </where>
    </select>
</mapper>